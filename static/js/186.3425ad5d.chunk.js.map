{"version":3,"file":"static/js/186.3425ad5d.chunk.js","mappings":"+SAKMA,EAAY,QAMZC,EAAMC,EAAAA,EAAAA,OAAa,CACvBC,QAVe,gCAWfC,OAAQ,CACNC,QANY,mCAOZC,SANa,WAUJC,EAAW,mCAAG,oGACFN,EAAIO,IAjBR,sBAgBM,cACnBC,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCZ,EAAIO,IArBV,eAqB0B,CAAEJ,OAAQ,CAAES,MAAAA,KADjC,cAChBJ,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,sDAKRG,EAAU,mCAAG,WAAMC,GAAN,uFACDd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,IADvB,cAClBN,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACEd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,EAAxB,YA7BL,YA4BG,cACfN,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,EAAxB,YAjCL,YAgCM,cAClBN,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,8ECTvB,UA1BgB,WACd,IAAQI,GAAYI,EAAAA,EAAAA,IAAU,WAAtBJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAWH,GAASS,KAAKF,EAC1B,GAAE,CAACP,KAGF,8BACGM,EAAQI,OAAS,GAChB,wBACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADE,OAQf,qEAIP,C","sources":["Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst SEARCH_URL = 'search/movie';\nconst MOVIE_URL = 'movie';\nconst CREDITS_URL = 'credits';\nconst REVIEWS_URL = 'reviews';\nconst API_KEY = '8adcf8d70de8a773f292f2371bb5fb9b';\nconst LANGUAGE = 'en-US';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: LANGUAGE,\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await api.get(TRENDING_URL);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await api.get(SEARCH_URL, { params: { query } });\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}/${CREDITS_URL}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}/${REVIEWS_URL}`);\n  return response.data.results;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\n"],"names":["MOVIE_URL","api","axios","baseURL","params","api_key","language","getTrending","get","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","useParams","useState","reviews","setReviews","useEffect","then","length","map","id","author","content"],"sourceRoot":""}