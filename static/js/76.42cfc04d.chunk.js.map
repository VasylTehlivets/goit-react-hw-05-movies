{"version":3,"file":"static/js/76.42cfc04d.chunk.js","mappings":"8SAKMA,EAAY,QAMZC,EAAMC,EAAAA,EAAAA,OAAa,CACvBC,QAVe,gCAWfC,OAAQ,CACNC,QANY,mCAOZC,SANa,WAUJC,EAAW,mCAAG,oGACFN,EAAIO,IAjBR,sBAgBM,cACnBC,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCZ,EAAIO,IArBV,eAqB0B,CAAEJ,OAAQ,CAAES,MAAAA,KADjC,cAChBJ,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,sDAKRG,EAAU,mCAAG,WAAMC,GAAN,uFACDd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,IADvB,cAClBN,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACEd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,EAAxB,YA7BL,YA4BG,cACfN,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,EAAxB,YAjCL,YAgCM,cAClBN,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,0GCtCvB,EAAuB,mBAAvB,EAA0E,kB,SCqD1E,EAjDa,WACX,OAAkCQ,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAQR,IANAQ,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAQD,GACLS,MAAK,SAAAd,GAAI,OAAIW,EAAaX,EAAjB,IACTe,MAAMC,QAAQC,IAClB,GAAE,CAACZ,IAECK,EAIL,OACE,8BACGA,EAAUQ,OAAS,GAClB,eAAIC,UAAWC,EAAf,SACGV,EACEW,MAAM,EAAG,IACTC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACH,gBAAaP,UAAWC,EAAxB,UACGM,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLL,UAAWC,KAGb,8CAEF,4BACE,wBACE,uBAAII,OAEN,wCACa,uBAAIC,YAfZF,EADN,OAuBT,uCAIP,C","sources":["Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst SEARCH_URL = 'search/movie';\nconst MOVIE_URL = 'movie';\nconst CREDITS_URL = 'credits';\nconst REVIEWS_URL = 'reviews';\nconst API_KEY = '8adcf8d70de8a773f292f2371bb5fb9b';\nconst LANGUAGE = 'en-US';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: LANGUAGE,\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await api.get(TRENDING_URL);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await api.get(SEARCH_URL, { params: { query } });\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}/${CREDITS_URL}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}/${REVIEWS_URL}`);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../Api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [castMovie, setCastMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(data => setCastMovie(data))\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!castMovie) {\n    return;\n  }\n\n  return (\n    <>\n      {castMovie.length > 0 ? (\n        <ul className={css.list}>\n          {castMovie\n            .slice(0, 19)\n            .map(({ id, name, character, profile_path }) => (\n              <li key={id} className={css.list}>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n                    className={css.img}\n                  />\n                ) : (\n                  <div>Image not found</div>\n                )}\n                <div>\n                  <p>\n                    <b>{name}</b>\n                  </p>\n                  <p>\n                    Character: <b>{character}</b>\n                  </p>\n                </div>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <div>No casts</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\n\n\n\n\n\n\n\n"],"names":["MOVIE_URL","api","axios","baseURL","params","api_key","language","getTrending","get","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","useState","castMovie","setCastMovie","useParams","useEffect","then","catch","console","log","length","className","css","slice","map","id","name","character","profile_path","src","alt"],"sourceRoot":""}