{"version":3,"file":"static/js/278.f64ce2c5.chunk.js","mappings":"+SAKMA,EAAY,QAMZC,EAAMC,EAAAA,EAAAA,OAAa,CACvBC,QAVe,gCAWfC,OAAQ,CACNC,QANY,mCAOZC,SANa,WAUJC,EAAW,mCAAG,oGACFN,EAAIO,IAjBR,sBAgBM,cACnBC,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCZ,EAAIO,IArBV,eAqB0B,CAAEJ,OAAQ,CAAES,MAAAA,KADjC,cAChBJ,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,sDAKRG,EAAU,mCAAG,WAAMC,GAAN,uFACDd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,IADvB,cAClBN,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACEd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,EAAxB,YA7BL,YA4BG,cACfN,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDd,EAAIO,IAAJ,UAAWR,EAAX,YAAwBe,EAAxB,YAjCL,YAgCM,cAClBN,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,iHCSvB,UA5Ce,WACb,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMX,EAAQU,EAAaf,IAAI,UAAY,GACrCiB,GAAWC,EAAAA,EAAAA,MAmBjB,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACOd,EADP,kEAEqBD,EAAAA,EAAAA,IAASC,GAF9B,OAEQH,EAFR,OAGEW,EAAUX,GAHZ,4CADc,uBAAC,WAAD,wBAMdkB,EACD,GAAE,CAACf,KAGF,kBAAMgB,SAlBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAWF,EAAKG,SAAStB,MAAMuB,MACrCZ,EAAgB,CAAEX,MAAOqB,IACzBF,EAAKK,OACN,EAYC,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,aAAc3B,KAC9C,mBAAQyB,KAAK,SAAb,oBACClB,EAAOqB,QACN,wBACGrB,EAAOsB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAnD,SACGkB,EAAMK,SAFFL,EAAME,GADA,MASnBhC,IAAS,6DAIhB,C","sources":["Api.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst SEARCH_URL = 'search/movie';\nconst MOVIE_URL = 'movie';\nconst CREDITS_URL = 'credits';\nconst REVIEWS_URL = 'reviews';\nconst API_KEY = '8adcf8d70de8a773f292f2371bb5fb9b';\nconst LANGUAGE = 'en-US';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: LANGUAGE,\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await api.get(TRENDING_URL);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await api.get(SEARCH_URL, { params: { query } });\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}/${CREDITS_URL}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await api.get(`${MOVIE_URL}/${movieId}/${REVIEWS_URL}`);\n  return response.data.results;\n};\n","import { getQuery } from '../../Api';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, NavLink, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') || '';\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const newQuery = form.elements.query.value;\n    setSearchParams({ query: newQuery });\n    form.reset();\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!query) return;\n      const data = await getQuery(query);\n      setMovies(data);\n    }\n    fetchData();\n  }, [query]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" defaultValue={query} />\n      <button type=\"submit\">Search</button>\n      {movies.length ? (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        query && <div>No results. Please try again.</div>\n      )}\n    </form>\n  );\n};\n\nexport default Movies;"],"names":["MOVIE_URL","api","axios","baseURL","params","api_key","language","getTrending","get","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","fetchData","onSubmit","e","preventDefault","form","currentTarget","newQuery","elements","value","reset","type","name","defaultValue","length","map","movie","to","id","state","from","title"],"sourceRoot":""}